731718 - random values when running delloem command on ppc, s390x

Make powermonitor bigendian-aware.
Fix one buffer overflow in CheckSetLEDSupport.

diff -up ipmitool-1.8.11/lib/ipmi_delloem.c.fixes ipmitool-1.8.11/lib/ipmi_delloem.c
--- ipmitool-1.8.11/lib/ipmi_delloem.c.fixes	2011-08-18 16:01:49.613047498 +0200
+++ ipmitool-1.8.11/lib/ipmi_delloem.c	2011-08-18 16:53:25.087037529 +0200
@@ -3007,7 +3007,11 @@ static int ipmi_powermgmt(struct ipmi_in
         return -1;
     }
     bmctimeconvval=(uint32_t*)rsp->data;
+#if WORDS_BIGENDIAN
+    bmctimeconv=BSWAP_32(*bmctimeconvval);
+#else
     bmctimeconv=*bmctimeconvval;
+#endif
 
     /* get powermanagement info*/
     req.msg.netfn = DELL_OEM_NETFN;
@@ -3036,7 +3040,15 @@ static int ipmi_powermgmt(struct ipmi_in
 
 
     pwrMonitorInfo = (IPMI_POWER_MONITOR*)rsp->data;
-
+#if WORDS_BIGENDIAN
+    cumStartTimeConv = BSWAP_32(pwrMonitorInfo->cumStartTime);
+    cumReadingConv = BSWAP_32(pwrMonitorInfo->cumReading);
+    maxPeakStartTimeConv = BSWAP_32(pwrMonitorInfo->maxPeakStartTime);
+    ampPeakTimeConv = BSWAP_32(pwrMonitorInfo->ampPeakTime);
+    ampReadingConv = BSWAP_16(pwrMonitorInfo->ampReading);
+    wattPeakTimeConv = BSWAP_32(pwrMonitorInfo->wattPeakTime);
+    wattReadingConv = BSWAP_16(pwrMonitorInfo->wattReading);
+#else
     cumStartTimeConv = pwrMonitorInfo->cumStartTime;
     cumReadingConv = pwrMonitorInfo->cumReading;
     maxPeakStartTimeConv = pwrMonitorInfo->maxPeakStartTime;
@@ -3044,6 +3056,7 @@ static int ipmi_powermgmt(struct ipmi_in
     ampReadingConv = pwrMonitorInfo->ampReading;
     wattPeakTimeConv = pwrMonitorInfo->wattPeakTime;
     wattReadingConv = pwrMonitorInfo->wattReading;
+#endif
 
     ipmi_time_to_str(cumStartTimeConv, cumStartTime);
 
@@ -3225,6 +3238,10 @@ static int ipmi_get_power_headroom_comma
         printf("power headroom  Data               : %x %x %x %x ",
         /*need to look into */                                                                  rsp->data[0], rsp->data[1], rsp->data[2], rsp->data[3]);
     powerheadroom= *(( POWER_HEADROOM *)rsp->data);
+#if WORDS_BIGENDIAN
+    powerheadroom.instheadroom = BSWAP_16(powerheadroom.instheadroom);
+    powerheadroom.peakheadroom = BSWAP_16(powerheadroom.peakheadroom);
+#endif
 
     printf ("Headroom\n\r");
     printf ("Statistic                     Reading\n\r");   
@@ -3381,10 +3398,13 @@ static int ipmi_get_instan_power_consmpt
     }
 
     * instpowerconsumptiondata = * ( (IPMI_INST_POWER_CONSUMPTION_DATA*) (rsp->data));
+#if WORDS_BIGENDIAN
+    instpowerconsumptiondata->instanpowerconsumption = BSWAP_16(instpowerconsumptiondata->instanpowerconsumption);
+    instpowerconsumptiondata->instanApms = BSWAP_16(instpowerconsumptiondata->instanApms);
+    instpowerconsumptiondata->resv1 = BSWAP_16(instpowerconsumptiondata->resv1);
+#endif
 
     return 0;
-
-
 }
 
 
@@ -3515,6 +3535,12 @@ static int ipmi_get_avgpower_consmpt_his
     }
 
     *pavgpower = *( (IPMI_AVGPOWER_CONSUMP_HISTORY*) rsp->data);
+#if WORDS_BIGENDIAN
+    pavgpower->lastminutepower = BSWAP_16(pavgpower->lastminutepower);
+    pavgpower->lasthourpower = BSWAP_16(pavgpower->lasthourpower);
+    pavgpower->lastdaypower = BSWAP_16(pavgpower->lastdaypower);
+    pavgpower->lastweakpower = BSWAP_16(pavgpower->lastweakpower);
+#endif
 
     return 0;
 }
@@ -3578,6 +3604,16 @@ static int ipmi_get_peakpower_consmpt_hi
 
     }
     *pstPeakpower =* ((IPMI_POWER_CONSUMP_HISTORY*)rsp->data);
+#if WORDS_BIGENDIAN
+    pstPeakpower->lastminutepower = BSWAP_16(pstPeakpower->lastminutepower);
+    pstPeakpower->lasthourpower = BSWAP_16(pstPeakpower->lasthourpower);
+    pstPeakpower->lastdaypower = BSWAP_16(pstPeakpower->lastdaypower);
+    pstPeakpower->lastweakpower = BSWAP_16(pstPeakpower->lastweakpower);
+    pstPeakpower->lastminutepowertime = BSWAP_32(pstPeakpower->lastminutepowertime);
+    pstPeakpower->lasthourpowertime = BSWAP_32(pstPeakpower->lasthourpowertime);
+    pstPeakpower->lastdaypowertime = BSWAP_32(pstPeakpower->lastdaypowertime);
+    pstPeakpower->lastweekpowertime = BSWAP_32(pstPeakpower->lastweekpowertime);
+#endif
     return 0;
 }
 
@@ -3641,7 +3677,17 @@ static int ipmi_get_minpower_consmpt_his
 
     }
     *pstMinpower =* ((IPMI_POWER_CONSUMP_HISTORY*)rsp->data);
-    return 0;
+#if WORDS_BIGENDIAN
+    pstMinpower->lastminutepower = BSWAP_16(pstMinpower->lastminutepower);
+    pstMinpower->lasthourpower = BSWAP_16(pstMinpower->lasthourpower);
+    pstMinpower->lastdaypower = BSWAP_16(pstMinpower->lastdaypower);
+    pstMinpower->lastweakpower = BSWAP_16(pstMinpower->lastweakpower);
+    pstMinpower->lastminutepowertime = BSWAP_32(pstMinpower->lastminutepowertime);
+    pstMinpower->lasthourpowertime = BSWAP_32(pstMinpower->lasthourpowertime);
+    pstMinpower->lastdaypowertime = BSWAP_32(pstMinpower->lastdaypowertime);
+    pstMinpower->lastweekpowertime = BSWAP_32(pstMinpower->lastweekpowertime);
+#endif
+   return 0;
 }
 
 
@@ -3873,6 +3919,15 @@ static int ipmi_get_power_cap(struct ipm
     }
 
     * ipmipowercap = *((IPMI_POWER_CAP*)(rsp->data));
+#if WORDS_BIGENDIAN
+    ipmipowercap->PowerCap = BSWAP_16(ipmipowercap->PowerCap);
+    ipmipowercap->MaximumPowerConsmp = BSWAP_16(ipmipowercap->MaximumPowerConsmp);
+    ipmipowercap->MinimumPowerConsmp = BSWAP_16(ipmipowercap->MinimumPowerConsmp);
+    ipmipowercap->totalnumpowersupp = BSWAP_16(ipmipowercap->totalnumpowersupp);
+    ipmipowercap->AvailablePower = BSWAP_16(ipmipowercap->AvailablePower);
+    ipmipowercap->SystemThrottling = BSWAP_16(ipmipowercap->SystemThrottling);
+    ipmipowercap->Resv = BSWAP_16(ipmipowercap->Resv);
+#endif
 
     return 0;
 }
@@ -4268,7 +4323,7 @@ CheckSetLEDSupport(struct ipmi_intf * in
 {
     struct ipmi_rs * rsp = NULL;
     struct ipmi_rq req = {0};
-    uint8_t data[4];
+    uint8_t data[10];
 
     SetLEDSupported = 0;
     req.msg.netfn = DELL_OEM_NETFN;
