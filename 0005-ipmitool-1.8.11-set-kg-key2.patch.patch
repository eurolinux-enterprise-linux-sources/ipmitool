From d17551b4a276a4af9228b80c383d1ac5fe083f08 Mon Sep 17 00:00:00 2001
From: Boris Ranto <branto@redhat.com>
Date: Fri, 6 Nov 2015 12:54:06 +0100
Subject: [PATCH 05/11] ipmitool-1.8.11-set-kg-key2.patch

656841: ipmitool: '-k' option does not set correct Kg key

The delloem patch broke kgkey setting, so let's fix it here.
ipmi_intf_session_set_kgkey() now expects that the kgkey has exactly 20
bytes.

Backported by: jsafrane branto
---
 lib/ipmi_main.c | 11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

diff --git a/lib/ipmi_main.c b/lib/ipmi_main.c
index b8c9e19..47064be 100644
--- a/lib/ipmi_main.c
+++ b/lib/ipmi_main.c
@@ -459,11 +459,12 @@ ipmi_main(int argc, char ** argv,
 				free(kgkey);
 				kgkey = NULL;
 			}
-			kgkey = strdup(optarg);
+			kgkey = calloc(IPMI_KG_BUFFER_SIZE, 1);
 			if (kgkey == NULL) {
 				lprintf(LOG_ERR, "%s: malloc failure", progname);
 				goto out_free;
 			}
+			strncpy(kgkey, optarg, IPMI_KG_BUFFER_SIZE);
 			break;
 		case 'K':
 			if ((tmp_env = getenv("IPMI_KGKEY"))) {
@@ -471,11 +472,12 @@ ipmi_main(int argc, char ** argv,
 					free(kgkey);
 					kgkey = NULL;
 				}
-				kgkey = strdup(tmp_env);
+				kgkey = calloc(IPMI_KG_BUFFER_SIZE, 1);
 				if (kgkey == NULL) {
 					lprintf(LOG_ERR, "%s: malloc failure", progname);
 					goto out_free;
 				}
+				strncpy(kgkey, tmp_env, IPMI_KG_BUFFER_SIZE);
 			} else {
 				lprintf(LOG_WARN, "Unable to read kgkey from environment");
 			}
@@ -501,12 +503,13 @@ ipmi_main(int argc, char ** argv,
 					free(kgkey);
 					kgkey = NULL;
 				}
-				kgkey = strdup(tmp_pass);
-				tmp_pass = NULL;
+				kgkey = calloc(IPMI_KG_BUFFER_SIZE, 1);
 				if (kgkey == NULL) {
 					lprintf(LOG_ERR, "%s: malloc failure", progname);
 					goto out_free;
 				}
+				strncpy(kgkey, tmp_pass, IPMI_KG_BUFFER_SIZE);
+				tmp_pass = NULL;
 			}
 			break;
 		case 'U':
-- 
2.1.0

